{"version":3,"file":"touchkit.min.js","sources":["../node_modules/@meitu/mtouch/src/index.js","../node_modules/@meitu/mcanvas/src/index.js","../src/utils.js","../src/index.js","../node_modules/@meitu/mtouch/src/utils.js","../node_modules/@meitu/mtouch/src/handlerBus.js","../node_modules/@meitu/mcanvas/src/utils.js","../src/zIndex.js"],"sourcesContent":["import _ from './utils';\nimport HandlerBus from './handlerBus';\n\nconst EVENT = ['touchstart','touchmove','touchend','drag','dragstart','dragend','pinch','pinchstart','pinchend','rotate','rotatestart','rotatend','singlePinchstart','singlePinch','singlePinchend','singleRotate','singleRotatestart','singleRotatend'];\n\nconst ORIGINEVENT = ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n\nexport default function MTouch(el = '') {\n    // 兼容不使用 new 的方式；\n    if (!(this instanceof MTouch))return new MTouch(el);\n    // 开关；\n    // 初始化时关闭，在调用 on 函数时对应开启；\n    this.use = {\n        drag: false,\n        pinch: false,\n        rotate: false,\n        singlePinch: false,\n        singleRotate: false,\n    };\n    // 获取容器元素；\n    this.operator = this.el = _.getEl(el);\n    // 状态记录；\n    this.draging = this.pinching = this.rotating = this.singlePinching = this.singleRotating = false;\n    // 全局参数记录；\n    this.fingers = 0;\n    this.startScale = 1;\n    this.startPoint = {};\n    this.secondPoint = {};\n    this.pinchStartLength = null;\n    this.singlePinchStartLength = null;\n    this.vector1 = {};\n    this.singleBasePoint = {};\n\n    // 初始化注册事件队列；\n    this._driveBus();\n    // 监听原生 touch 事件；\n    this._bind();\n}\n\nMTouch.prototype._driveBus = function() {\n    EVENT.forEach(evName => {\n        this[evName] = new HandlerBus(this.el);\n    });\n};\n\nMTouch.prototype._bind = function() {\n    ORIGINEVENT.forEach(evName => {\n        let fn = evName == 'touchcancel'? 'end': evName.replace('touch', '');\n        // 需要存下 bind(this) 后的函数指向，用于 destroy;\n        this[`_${fn}_bind`] = this[`_${fn}`].bind(this);\n        this.el.addEventListener(evName, this[`_${fn}_bind`], false);\n    });\n};\nMTouch.prototype.destroy = function() {\n    ORIGINEVENT.forEach(evName => {\n        let fn = evName == 'touchcancel' ? 'end' : evName.replace('touch', '');\n        this.el.removeEventListener(evName, this[`_${fn}_bind`], false);\n    });\n};\nMTouch.prototype._start = function(e) {\n    if (!e.touches || e.type !== 'touchstart')return;\n    // 记录手指数量；\n    this.fingers = e.touches.length;\n    // 记录第一触控点；\n    this.startPoint = _.getPoint(e, 0);\n    // 计算单指操作时的基础点；\n    this.singleBasePoint = _.getBasePoint(this.operator);\n    // 双指操作时\n    if (this.fingers > 1) {\n        // 第二触控点；\n        this.secondPoint = _.getPoint(e, 1);\n        // 计算双指向量；\n        this.vector1 = _.getVector(this.secondPoint, this.startPoint);\n        // 计算向量模；\n        this.pinchStartLength = _.getLength(this.vector1);\n    } else if (this.use.singlePinch) {\n        // 单指且监听 singlePinch 时，计算向量模；\n        let pinchV1 = _.getVector(this.startPoint, this.singleBasePoint);\n        this.singlePinchStartLength = _.getLength(pinchV1);\n    }\n    // 触发 touchstart 事件；\n    this.touchstart.fire({origin: e, eventType: 'touchstart'});\n};\nMTouch.prototype._move = function(ev) {\n    if (!ev.touches || ev.type !== 'touchmove')return;\n    // 判断触控点是否为 singlebutton 区域；\n    let isSingleButton = _.data(ev.target,'singleButton'),\n        curFingers = ev.touches.length,\n        curPoint = _.getPoint(ev, 0),\n        singlePinchLength,\n        pinchLength,\n        rotateV1,\n        rotateV2,\n        pinchV2;\n    // 当从原先的两指到一指的时候，可能会出现基础手指的变化，导致跳动；\n    // 因此需屏蔽掉一次错误的touchmove事件，待重新设置基础指后，再继续进行；\n    if (curFingers < this.fingers) {\n        this.startPoint = curPoint;\n        this.fingers = curFingers;\n        return;\n    }\n    // 两指先后触摸时，只会触发第一指一次 touchstart，第二指不会再次触发 touchstart；\n    // 因此会出现没有记录第二指状态，需要在touchmove中重新获取参数；\n    if (curFingers > 1 && (!this.secondPoint || !this.vector1 || !this.pinchStartLength)) {\n        this.secondPoint = _.getPoint(ev, 1);\n        this.vector1 = _.getVector(this.secondPoint, this.startPoint);\n        this.pinchStartLength = _.getLength(this.vector1);\n    }\n    // 双指时，需触发 pinch 和 rotate 事件；\n    if (curFingers > 1) {\n        let curSecPoint = _.getPoint(ev, 1),\n            vector2 = _.getVector(curSecPoint, curPoint);\n        // 触发 pinch 事件；\n        if (this.use.pinch) {\n            pinchLength = _.getLength(vector2);\n            this._eventFire('pinch', {\n                delta: {\n                    scale: pinchLength / this.pinchStartLength,\n                },\n                origin: ev,\n            });\n            this.pinchStartLength = pinchLength;\n        }\n        // 触发 rotate 事件；\n        if (this.use.rotate) {\n            this._eventFire('rotate', {\n                delta: {\n                    rotate: _.getAngle(this.vector1, vector2),\n                },\n                origin: ev,\n            });\n            this.vector1 = vector2;\n        }\n    } else {\n        // 触发 singlePinch 事件;\n        if (this.use.singlePinch && isSingleButton) {\n            pinchV2 = _.getVector(curPoint, this.singleBasePoint);\n            singlePinchLength = _.getLength(pinchV2);\n            this._eventFire('singlePinch', {\n                delta: {\n                    scale: singlePinchLength / this.singlePinchStartLength,\n                },\n                origin: ev,\n            });\n            this.singlePinchStartLength = singlePinchLength;\n        }\n        // 触发 singleRotate 事件;\n        if (this.use.singleRotate && isSingleButton) {\n            rotateV1 = _.getVector(this.startPoint, this.singleBasePoint);\n            rotateV2 = _.getVector(curPoint, this.singleBasePoint);\n            this._eventFire('singleRotate', {\n                delta: {\n                    rotate: _.getAngle(rotateV1, rotateV2),\n                },\n                origin: ev,\n            });\n        }\n    }\n    // 触发 drag 事件；\n    if (this.use.drag) {\n        if (!isSingleButton) {\n            this._eventFire('drag', {\n                delta: {\n                    deltaX: curPoint.x - this.startPoint.x,\n                    deltaY: curPoint.y - this.startPoint.y,\n                },\n                origin: ev,\n            });\n        }\n    }\n    this.startPoint = curPoint;\n    // 触发 touchmove 事件；\n    this.touchmove.fire({eventType: 'touchmove', origin: ev});\n    ev.preventDefault();\n};\nMTouch.prototype._end = function(ev) {\n    if (!ev.touches && ev.type !== 'touchend' && ev.type !== 'touchcancel')return;\n    // 触发 end 事件；\n    ['pinch', 'drag', 'rotate', 'singleRotate', 'singlePinch'].forEach(evName => {\n        this._eventEnd(evName, {origin: ev});\n    });\n    this.touchend.fire({eventType: 'touchend', origin: ev});\n};\nMTouch.prototype._eventFire = function(evName, ev) {\n    let ing = `${evName}ing`,\n        start = `${evName}start`;\n    if (!this[ing]) {\n        ev.eventType = start;\n        this[start].fire(ev);\n        this[ing] = true;\n    } else {\n        ev.eventType = evName;\n        this[evName].fire(ev);\n    }\n};\nMTouch.prototype._eventEnd = function(evName, ev) {\n    let ing = `${evName}ing`,\n        end;\n    if (evName == 'rotate' || evName == 'singleRotate') {\n        end = `${evName}nd`;\n    } else {\n        end = `${evName}end`;\n    }\n    if (this[ing]) {\n        ev.eventType = end;\n        this[end].fire(ev);\n        this[ing] = false;\n    }\n};\n// 添加 button 区域；\n// 背景样式由业务方定制；\nMTouch.prototype._addButton = function(el){\n    let [button] = _.domify(`<div class=\"mtouch-singleButton\" data-singleButton='true' style='position:absolute;right:-15px;bottom: -15px;width:30px;height: 30px;background-size: 100% 100%;'></div>`),\n        _style;\n    el.appendChild(button);\n    el.setAttribute('data-mtouch-addButton',true);\n    if(getComputedStyle && window.getComputedStyle(el,null).position === 'static'){\n        _style = el.style || '';\n        el.style = _style + 'position:relative';\n    }\n};\n// 切换 operator;\nMTouch.prototype.switch = function(el,addButton = true) {\n    let _el;\n    if(!el){\n        this.operator = this.el;\n        return;\n    }\n    this.operator = _el = _.getEl(el);\n    if(!_.data(_el,'mtouch-addButton') && (this.use.singleRotate || this.use.singlePinch) && addButton){\n        this._addButton(_el);\n    }\n};\nMTouch.prototype.on = function(evName, handler = ()=>{}, operator) {\n    if(_.include(evName,' ')){\n        evName.split(' ').forEach(v=>{\n            this._on(v,handler,operator);\n        });\n    }else{\n        this._on(evName,handler,operator);\n    }\n    return this;\n};\nMTouch.prototype._on = function(evName,handler,operator){\n    this.use[_.getUseName(evName)] = true;\n    this[evName].add(handler);\n    this.switch(operator);\n};\nMTouch.prototype.off = function(evName, handler) {\n    this[evName].del(handler);\n};\n","import _ from './utils';\n\nexport default function MCanvas(cwidth,cheight){\n\n    // 兼容不使用 new 的方式；\n    if (!(this instanceof MCanvas))\n        return new MCanvas(cwidth,cheight);\n\n    // 配置canvas初始大小；\n    // cwidth：画布宽度，Number,选填，默认为 500;\n    // cheight: 画布高度，Number，选填，默认与宽度一致；\n    this.ops = {\n        width: cwidth || 500,\n        height:cheight || cwidth,\n    };\n    // 全局画布；\n    this.canvas = null;\n    this.ctx = null;\n\n    // 绘制函数队列；\n    this.queue = [];\n    // 最后执行的函数；\n    this.end = null;\n\n    // 文字绘制数据；\n    this.textData = {};\n\n    // 背景图数据;\n    this.bgConfig = null;\n\n    // 初始化创建画布；\n    this._init();\n}\n\nMCanvas.prototype._init = function(){\n    this.canvas = document.createElement('canvas');\n    this.canvas.width = this.ops.width;\n    this.canvas.height = this.ops.height;\n    this.ctx = this.canvas.getContext('2d');\n};\n\n// --------------------------------------------------------\n// 绘制背景部分；\n// --------------------------------------------------------\n\nMCanvas.prototype.background = function(bg){\n    if(!bg && this.bgConfig)bg = this.bgConfig;\n    this.bgConfig = bg;\n    this.queue.push(() => {\n        if(bg.color){\n            this.ctx.fillStyle = bg.color;\n            this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height);\n        }\n        if(bg.image){\n            _.getImage(bg.image, img =>{\n                this._background(img,bg);\n            });\n        }else{\n            console.error('background image error!');\n        }\n    });\n    return this;\n};\n\nMCanvas.prototype._background = function(img,bg){\n    // 图片与canvas的长宽比；\n    let iRatio = img.naturalWidth / img.naturalHeight;\n    let cRatio = this.canvas.width / this.canvas.height;\n    // 背景绘制参数；\n    let sx,sy,swidth,sheight,dx,dy,dwidth,dheight;\n    switch (bg.type) {\n        // 裁剪模式，固定canvas大小，原图铺满，超出的部分裁剪；\n        case 'crop':\n            sx = bg.left || 0;\n            sy = bg.top || 0;\n            if(iRatio > cRatio){\n                swidth = img.naturalHeight * cRatio;\n                sheight = img.naturalHeight;\n            }else{\n                swidth = img.naturalWidth;\n                sheight = swidth / cRatio;\n            }\n            dy = dx = 0;\n            dheight = this.canvas.height;\n            dwidth = this.canvas.width;\n            break;\n        // 包含模式，固定canvas大小，包含背景图；\n        case 'contain':\n            sy = sx = 0;\n            swidth = img.naturalWidth;\n            sheight = img.naturalHeight;\n            if(iRatio > cRatio){\n                dwidth = this.canvas.width;\n                dheight = dwidth / iRatio;\n                dx = bg.left || 0;\n                dy = (bg.top || bg.top == 0) ? bg.top : (this.canvas.height - dheight)/2;\n            }else{\n                dheight = this.canvas.height;\n                dwidth = dheight * iRatio;\n                dy = bg.top || 0;\n                dx = (bg.left || bg.left == 0) ? bg.left : (this.canvas.width - dwidth)/2;\n            }\n            break;\n        // 原图模式：canvas与原图大小一致，忽略初始化 传入的宽高参数；\n        // 同时，background 传入的 left/top 均被忽略；\n        case 'origin':\n            this.canvas.width = img.naturalWidth;\n            this.canvas.height = img.naturalHeight;\n            sx = sy = 0;\n            swidth = img.naturalWidth;\n            sheight = img.naturalHeight;\n            dx = dy = 0;\n            dwidth = this.canvas.width;\n            dheight = this.canvas.height;\n            break;\n        default:\n            console.error('background type error!');\n    }\n    this.ctx.drawImage(img,sx,sy,swidth,sheight,dx,dy,dwidth,dheight);\n    this._next();\n};\n// --------------------------------------------------------\n// 绘制图层部分；\n// --------------------------------------------------------\n\n// 绘制水印；基于 add 函数封装；\nMCanvas.prototype.watermark = function(image = '',ops){\n    if(!image){\n        console.log('there is not image of watermark');\n        return;\n    }\n    // 参数默认值；\n    let { width = '40%' , pos = 'rightbottom' , margin = 20} = ops;\n    let position = {\n        x:0,\n        y:0,\n        scale:1,\n        rotate:0,\n    };\n    switch (pos) {\n        case 'leftTop':\n            position.x = `left:${margin}`;\n            position.y = `top:${margin}`;\n            break;\n        case 'leftBottom':\n            position.x = `left:${margin}`;\n            position.y = `bottom:${margin}`;\n            break;\n        case 'rightTop':\n            position.x = `right:${margin}`;\n            position.y = `top:${margin}`;\n            break;\n        case 'rightBottom':\n            position.x = `right:${margin}`;\n            position.y = `bottom:${margin}`;\n            break;\n        default:\n    }\n    this.add(image,{\n        width,\n        pos:position,\n    });\n    return this;\n};\n\n// 通用绘制图层函数；\n// 使用方式：\n// 多张图: add([{image:'',options:{}},{image:'',options:{}}]);\n// 单张图: add(image,options);\nMCanvas.prototype.add = function(image = '',options){\n    // 默认参数；\n    let def = {\n        width:'100%',\n        crop:{\n            x:0,\n            y:0,\n            width:'100%',\n            height:'100%',\n        },\n        pos:{\n            x:0,\n            y:0,\n            scale:1,\n            rotate:0,\n        },\n    };\n\n    if(!_.isArr(image))image = [{image,options}];\n\n    image.forEach( v =>{\n        // 将封装好的 add函数 推入队列中待执行；\n        // 参数经过 _handleOps 加工；\n        this.queue.push(() => {\n            _.getImage(v.image, img => {\n                this._add(img,this._handleOps(_.extend(def,v.options),img));\n            });\n        });\n    });\n\n    return this;\n};\n\nMCanvas.prototype._add = function(img,ops){\n    let ratio = img.naturalWidth / img.naturalHeight;\n    // 画布canvas参数；\n    let cdx,cdy,cdw,cdh;\n    // 素材canvas参数；\n    let { x:lsx, y:lsy, width:lsw, height:lsh} = ops.crop;\n    let ldx,ldy,ldw,ldh;\n    // 素材canvas的绘制;\n    let lcvs = document.createElement('canvas');\n    let lctx = lcvs.getContext('2d');\n    // 图片宽高比 * 1.4 是一个最安全的宽度，旋转任意角度都不会被裁剪；\n    // 没有旋转却长宽比很高大的图，会导致放大倍数太大，因此甚至了最高倍数为5；\n    let lctxScale = ratio * 1.4 > 5 ? 5 : ratio * 1.4;\n    let spaceX,spaceY;\n\n    lcvs.width =  img.naturalWidth * lctxScale;\n    lcvs.height = img.naturalHeight * lctxScale;\n\n    // 从素材canvas的中心点开始绘制；\n    ldx = -img.naturalWidth/2;\n    ldy = -img.naturalHeight/2;\n    ldw = img.naturalWidth;\n    ldh = img.naturalHeight;\n\n    lctx.translate(lcvs.width/2,lcvs.height/2);\n    lctx.rotate(ops.pos.rotate);\n    lctx.drawImage(img,lsx,lsy,lsw,lsh,ldx,ldy,ldw,ldh);\n    //\n    // lcvs.style = 'width:300px';\n    // document.querySelector('body').appendChild(lcvs);\n\n    // 获取素材最终的宽高;\n    cdw = ops.width * lctxScale;\n    cdh = cdw/ ratio;\n\n    spaceX = (lctxScale - 1) * ops.width / 2;\n    spaceY = spaceX / ratio;\n\n    // 获取素材的位置；\n    //    配置的位置 - 缩放的影响 - 绘制成正方形的影响；\n    cdx = ops.pos.x + cdw * ( 1 - ops.pos.scale )/2 - spaceX;\n    cdy = ops.pos.y + cdh * ( 1 - ops.pos.scale )/2 - spaceY;\n\n    cdw *= ops.pos.scale;\n    cdh *= ops.pos.scale;\n\n    this.ctx.drawImage(lcvs,cdx,cdy,cdw,cdh);\n\n    lcvs = lctx = null;\n    this._next();\n};\n// 参数加工函数；\nMCanvas.prototype._handleOps = function(ops,img){\n    let cw = this.canvas.width,\n        ch = this.canvas.height,\n        iw = img.naturalWidth,\n        ih = img.naturalHeight;\n\n    // 图片宽高比；\n    let ratio = iw / ih;\n\n    // 根据参数计算后的绘制宽度；\n    let width =  this._get(cw,iw,ops.width,'pos');\n\n    // 裁剪的最大宽高；\n    let maxLsw,maxLsh;\n\n    // 裁剪参数；\n    let { x:cropx,y:cropy,width:cropw,height:croph } = ops.crop;\n    let crop = {\n        x: this._get(cw,iw,cropx,'crop'),\n        y: this._get(ch,ih,cropy,'crop'),\n        width:this._get(cw,iw,cropw,'crop'),\n        height:this._get(ch,ih,croph,'crop'),\n    };\n    // 最大值判定；\n    if(crop.x > iw)crop.x = iw;\n    if(crop.y > ih)crop.y = ih;\n    maxLsw = img.naturalWidth - crop.x;\n    maxLsh = img.naturalHeight - crop.y;\n    if(crop.width > maxLsw)crop.width = maxLsw;\n    if(crop.height > maxLsh)crop.height = maxLsh;\n\n    // 位置参数；\n    let { x: px, y: py, rotate: pr, scale: ps } = ops.pos;\n    let pos = {\n        x:this._get(cw,width,px,'pos'),\n        y:this._get(ch,width/ratio,py,'pos'),\n        scale : ps,\n        rotate : parseFloat(pr) * Math.PI / 180,\n    };\n    return {width,crop,pos};\n};\n\n// --------------------------------------------------------\n// 绘制文字部分；\n// --------------------------------------------------------\nMCanvas.prototype.text = function(context = '', ops){\n    // 默认字体；\n    let fontFamily = `helvetica neue,hiragino sans gb,Microsoft YaHei,arial,tahoma,sans-serif`;\n    // 默认的字体大小;\n    let size = this.canvas.width / 20;\n\n    this.queue.push(()=>{\n        let option = {\n            width : 300,\n            align : 'left',\n            smallStyle:{\n                font : `${size * 0.8}px ${fontFamily}`,\n                color:'#000',\n                lineheight:size * 0.9,\n            },\n            normalStyle:{\n                font : `${size }px ${fontFamily}`,\n                color:'#000',\n                lineheight:size*1.1,\n            },\n            largeStyle:{\n                font : `${size * 1.3}px ${fontFamily}`,\n                color:'#000',\n                lineheight:size * 1.4,\n            },\n            pos:{\n                x:0,\n                y:0,\n            },\n        };\n        option = _.extend(option,ops);\n\n        // 解析字符串模板后，调用字体绘制函数；\n        this._text(this._parse(context),option);\n        this._next();\n    });\n    return this;\n};\n// 字符串模板解析函数\n// 解析 <s></s> <b></b>\nMCanvas.prototype._parse = function(context){\n    let arr = context.split(/<s>|<b>/);\n    let result = [];\n    for(let i=0;i<arr.length;i++){\n        let value = arr[i];\n        if(/<\\/s>|<\\/b>/.test(value)){\n            let splitTag = /<\\/s>/.test(value) ? '</s>' : '</b>',\n                type     = /<\\/s>/.test(value) ? 'small' : 'large';\n            let tmp = arr[i].split(splitTag);\n            result.push({\n                type:type,\n                text:tmp[0],\n            });\n            tmp[1] && result.push({\n                type:'normal',\n                text:tmp[1],\n            });\n            continue;\n        }\n        arr[i] && result.push({\n            text:arr[i],\n            type:'normal',\n        });\n    }\n    return result;\n};\nMCanvas.prototype._text = function(textArr,option){\n    // 处理宽度参数；\n    option.width = this._get(this.canvas.width,0,option.width,'pos');\n\n    let style,line = 1,length = 0,\n        lineheight = getLineHeight(textArr,option),\n        x = this._get(this.canvas.width,option.width,option.pos.x,'pos'),\n        y = (this._get(this.canvas.height,0,option.pos.y,'pos')) + lineheight;\n\n    // data:字体数据；\n    // lineWidth:行宽；\n    this.textData[line] = {\n        data:[],\n        lineWidth:0,\n    };\n\n    // 生成字体数据；\n    textArr.forEach(v =>{\n        style = option[`${v.type}Style`];\n        this.ctx.font = style.font;\n        let width = this.ctx.measureText(v.text).width;\n\n        // 处理 <br> 换行，先替换成 '|',便于单字绘图时进行判断；\n        let context = v.text.replace(/<br>/g,'|');\n\n        // 先进行多字超出判断，超出宽度后再进行单字超出判断；\n        if((length + width) > option.width || context.indexOf('|') !== -1){\n            for (let i=0,fontLength = context.length; i < fontLength; i++) {\n                let font = context[i];\n                width = this.ctx.measureText(font).width;\n\n                // 当字体的计算宽度 > 设置的宽度 || 内容中包含换行时,进入换行逻辑；\n                if((length + width) > option.width || font == '|'){\n                    length = 0;\n                    x = this._get(this.canvas.width,option.width,option.pos.x,'pos');\n                    y += lineheight;\n                    line += 1;\n                    this.textData[line] = {\n                        data:[],\n                        lineWidth:0,\n                    };\n                    if(font == '|')continue;\n                }\n                this.textData[line]['data'].push({\n                    context:font,x,y,style,width,\n                });\n                length += width;\n                x += width;\n                this.textData[line]['lineWidth'] = length;\n            }\n        }else{\n            this.textData[line]['data'].push({\n                context,x,y,style,width,\n            });\n            length += width;\n            x += width;\n            this.textData[line]['lineWidth'] = length;\n        }\n    });\n\n    // 通过字体数据进行文字的绘制；\n    _.forin(this.textData,(k,v)=>{\n        // \b增加 align 的功能；\n        let add = 0;\n        if(v.lineWidth < option.width){\n            if(option.align == 'center'){\n                add = (option.width - v.lineWidth)/2;\n            }else if (option.align == 'right') {\n                add = option.width - v.lineWidth;\n            }\n        }\n        v.data.forEach(text=>{\n            text.x += add;\n            this._fillText(text);\n        });\n    });\n\n    // 获取行高；\n    function getLineHeight(textArr,option) {\n        let lh = 0,vlh;\n        textArr.forEach( v =>{\n            vlh = option[`${v.type}Style`].lineheight;\n            if(vlh > lh)lh = vlh;\n        });\n        return lh;\n    }\n};\nMCanvas.prototype._fillText = function(text){\n    let {context,x,y,style} = text;\n    this.ctx.font = style.font;\n    this.ctx.textAlign = style.align;\n    this.ctx.textBaseline = 'bottom';\n    this.ctx.fillStyle = style.color;\n    this.ctx.fillText(context,x,y);\n};\n\n// --------------------------------------------------------\n// 业务功能函数部分\n// --------------------------------------------------------\n\n// 参数加工函数；\n// 兼容 5 种 value 值：\n// x:250, x:'250px', x:'100%', x:'left:250',x:'center',\n// width:100,width:'100px',width:'100%'\nMCanvas.prototype._get = function(par,child,str,type){\n    let result = str;\n    if(typeof str === 'string'){\n        if(str.indexOf(':') !== -1 && type == 'pos'){\n            let arr = str.split(':');\n            switch (arr[0]) {\n                case 'left':\n                case 'top':\n                    result = +(arr[1].replace('px',''));\n                    break;\n                case 'right':\n                case 'bottom':\n                    result = par - (+(arr[1].replace('px',''))) - child;\n                    break;\n                default:\n            }\n        }else if (str.indexOf('px') !== -1) {\n            result = (+str.replace('px', ''));\n        } else if (str.indexOf('%') !== -1) {\n            if(type == 'crop'){\n                result = child * (+str.replace('%', '')) / 100;\n            }else{\n                result = par * (+str.replace('%', '')) / 100;\n            }\n        }else if(str == 'center'){\n            result = (par-child)/2;\n        }else{\n            result = +str;\n        }\n    }\n    return result;\n};\n\n// 绘制函数；\nMCanvas.prototype.draw = function(fn = ()=>{}){\n    let b64;\n    this.end = () => {\n        setTimeout(()=>{\n            b64 = this.canvas.toDataURL('image/png');\n            fn(b64);\n        },0);\n    };\n    this._next();\n    return this;\n};\nMCanvas.prototype._next = function(){\n    if(this.queue.length > 0){\n        this.queue.shift()();\n    }else{\n        this.end();\n    }\n};\n","let sheet;\nexport default {\n    setPos(el, transform) {\n        let str = JSON.stringify(transform);\n        let value = `translate3d(${transform.x}px,${transform.y}px,0px) scale(${transform.scale}) rotate(${transform.rotate}deg)`;\n        el = this.getEl(el);\n        el.style.transform = value;\n        el.style.webkitTransform = value;\n        el.setAttribute('data-mtouch-status', str);\n    },\n    getPos(el) {\n        if(!el)return;\n        let defaulTrans;\n        let style = window.getComputedStyle(el,null);\n        let cssTrans = style.transform || style.webkitTransform;\n\n        if(window.getComputedStyle && cssTrans !== 'none'){\n            defaulTrans = this.matrixTo(cssTrans);\n        }else{\n            defaulTrans = {\n                x: 0,\n                y: 0,\n                scale: 1,\n                rotate: 0,\n            };\n        }\n        return JSON.parse(el.getAttribute('data-mtouch-status')) || defaulTrans;\n    },\n    extend(obj1, obj2) {\n        for (let k in obj2) {\n            if (obj2.hasOwnProperty(k)) {\n                if(typeof obj2[k] == 'object' && !(obj2[k] instanceof Node)){\n                    if(typeof obj1[k] !== 'object' || obj1[k] === null){\n                        obj1[k] = {};\n                    }\n                    this.extend(obj1[k],obj2[k]);\n                }else{\n                    obj1[k] = obj2[k];\n                }\n            }\n        }\n        return obj1;\n    },\n    getOffset(el){\n        el = this.getEl(el);\n        let offset = {};\n        offset.width = el.clientWidth || el.offsetWidth;\n        offset.height = el.clientHeight || el.offsetHeight;\n        return offset;\n    },\n    matrixTo(matrix){\n        // 解析 matrix 字符串，分割成数组；\n        let arr = (matrix.replace('matrix(','').replace(')','')).split(',');\n        // 根据不等式计算出 rotate 和 scale；\n        let cos = arr[0],\n            sin = arr[1],\n            tan = sin/cos,\n            rotate = Math.atan(tan)*180/Math.PI,\n            scale = cos/(Math.cos(Math.PI/180*rotate)),\n            trans;\n        // 传入翻译后的各项参数；\n        trans = {\n            x:parseInt(arr[4]),\n            y:parseInt(arr[5]),\n            scale,\n            rotate,\n        };\n        return trans;\n    },\n    domify(DOMString) {\n        let htmlDoc = document.implementation.createHTMLDocument();\n        htmlDoc.body.innerHTML = DOMString;\n        return htmlDoc.body.children;\n    },\n    getEl(el){\n        if(!el){\n            console.error('el error,there must be a el!');\n            return;\n        }\n        let _el;\n        if(typeof el == 'string'){\n            _el = document.querySelector(el);\n        }else if(el instanceof Node){\n            _el = el;\n        }else{\n            console.error('el error,there must be a el!');\n            return;\n        }\n        return _el;\n    },\n    addClass(el,cls){\n        let _cls;\n        el = this.getEl(el);\n        _cls = this.trim(el.className) || '';\n        if(_cls.indexOf(cls) == -1){\n            if(_cls.length == 0){\n                el.className = cls;\n            }else{\n                el.className = _cls + ` ${cls}`;\n            }\n        }\n        return this;\n    },\n    trim(str){\n        if(typeof str == 'string'){\n            return str.replace(/(^\\s*)|(\\s*$)/g, '');\n        }\n    },\n    removeClass(el,cls){\n        let _cls;\n        el = this.getEl(el);\n        _cls = el.className || '';\n        if(_cls.indexOf(cls) !== -1){\n            el.className = _cls.replace(new RegExp(cls, 'g'),'');\n        }\n    },\n    hasClass(el,cls){\n        el = this.getEl(el);\n        return el.className.indexOf(cls) !== -1;\n    },\n    forin(obj,cbk){\n        for(let k in obj){\n            if(obj.hasOwnProperty(k)){\n                cbk(k,obj[k]);\n            }\n        }\n    },\n    data(el,key,value){\n        el = this.getEl(el);\n        if(!value){\n            return el.getAttribute(`data-${key}`);\n        }else{\n            el.setAttribute(`data-${key}`,value);\n            return this;\n        }\n    },\n    include(str1,str2){\n        if(str1.indexOf){\n            return str1.indexOf(str2) !== -1;\n        }else{\n            return false;\n        }\n    },\n    delegate(par,evName,child,fn = ()=>{}){\n        let _par = this.getEl(par);\n        _par.addEventListener(evName,ev=>{\n            let target = ev.target;\n            while(target !== _par ){\n                if(child.indexOf('.') == 0){\n                    if(this.include(target.className,child.substring(1))){\n                        ev.delegateTarget = target;\n                        fn.bind(target)(ev);\n                        break;\n                    }\n                }else if(child.indexOf('#') == 0){\n                    if(target.id == child.substring(1)){\n                        ev.delegateTarget = target;\n                        fn.bind(target)(ev);\n                        break;\n                    }\n                }else{\n                    if(target.tagName.toLowerCase() == child){\n                        ev.delegateTarget = target;\n                        fn.bind(target)(ev);\n                        break;\n                    }\n                }\n                target = target.parentNode;\n            }\n        });\n    },\n    addCssRule(selector, rules){\n        if(!sheet){\n            sheet = createStyleSheet();\n        }\n        sheet.insertRule(`${selector}{${rules}}`,sheet.rules.length);\n    },\n    remove(el){\n        let _par = el.parentNode || el.parentElement;\n        _par.removeChild(el);\n    },\n    loadImage(image, success, error) {\n        let img = new Image();\n        let loaded = false;\n        if(image.indexOf('http') == 0){\n            img.crossOrigin = '*';\n        }\n        img.onload = () => {\n            if(!loaded){\n                loaded = true;\n                success(img);\n            }\n        };\n        img.onerror = () => {\n            error('img load error');\n        };\n        img.src = image;\n    },\n    getImage(image,cbk){\n        if(typeof image == 'string'){\n            this.loadImage(image, img => {\n                cbk(img);\n            },err=>{\n                console.log(err);\n            });\n        }else if(typeof image == 'object' && image instanceof Node){\n            cbk(image);\n        }else{\n            console.log('add image error');\n            return;\n        }\n    },\n    isArr(arr) {\n        return Object.prototype.toString.call(arr) === '[object Array]';\n    },\n};\n\nfunction createStyleSheet() {\n    let style = document.createElement('style');\n    style.type = 'text/css';\n    document.head.appendChild(style);\n    return style.sheet;\n}\n","import MT from '@meitu/mtouch';\nimport MC from '@meitu/mcanvas';\nimport ZIndex from './zIndex';\nimport _ from './utils';\n\nconst EVENT = ['touchstart','touchmove','touchend','drag','dragstart','dragend','pinch','pinchstart','pinchend','rotate','rotatestart','rotatend','singlePinchstart','singlePinch','singlePinchend','singleRotate','singleRotatestart','singleRotatend'];\n\nwindow.requestAnimFrame = (function() {\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || function(callback) {\n        window.setTimeout(callback, 1000 / 60);\n    };\n})();\n\nexport default function Touchkit(ops) {\n    // 兼容不使用 new 的方式；\n    if (!(this instanceof Touchkit))\n        return new Touchkit(ops);\n\n    this._ops = {\n        el: null,\n        use:{\n            drag:false,\n            pinch:false,\n            rotate:false,\n            singlePinch:false,\n            singleRotate:false,\n        },\n        limit:false,\n        // event\n        event:{\n            touchstart() {},touchmove() {},touchend() {},\n            dragstart() {},drag(){},dragend() {},\n            pinchstart() {},pinch(){},pinchend() {},\n            rotatestart() {},rotate(){},rotatend() {},\n            singlePinchstart(){},singlePinch(){},singlePinchend(){},\n            singleRotatestart(){},singleRotate(){},singleRotatend(){},\n        },\n    };\n\n    if(typeof ops == 'object'){\n        this._ops = _.extend(this._ops, ops);\n    }else if(typeof ops == 'string'){\n        this._ops.el = ops;\n    }\n\n    // 手势容器；\n    this.el = _.getEl(this._ops.el);\n    // 容器宽高，优先使用clientWidth，避免边框等因素的影响；\n    this.elStatus = {\n        width:this.el.clientWidth || this.el.offsetWidth,\n        height:this.el.clientHeight || this.el.offsetHeight,\n    };\n    this._init();\n\n    // 初始化mtouch；\n    this.mt = MT(this.el);\n\n    this._bind();\n\n    this._insertCss();\n\n}\n\nTouchkit.prototype._init = function(){\n    // 操作元素\n    this.operator = null;\n    this.operatorStatus = null;\n\n    this.transform = null;\n    this.freezed = false;\n    // 子元素仓库，index用于标记子元素；\n    this._childs = {};\n    this._childIndex = 0;\n    this._activeChild = null;\n    // 管理子元素之间的zindex层级关系；\n    this._zIndexBox = new ZIndex();\n};\n\nTouchkit.prototype.background = function(ops){\n    let _ops = {\n        // 背景图片，type: url/HTMLImageElement/HTMLCanvasElement\n        image:'' ,\n        // 绘制方式: crop / contain\n            // crop : 裁剪模式，背景图自适应铺满画布，多余部分裁剪；\n            // contain : 包含模式, 类似于 background-size:contain; 可通过left/top值进行位置的控制；\n        type:'contain',\n        // 背景图片距离画布左上角的距离，\n        left:0,\n        top:0,\n        // 在type=crop时使用，背景图只需启动拖动操作；\n        use:{\n            drag:true,\n        },\n    };\n    _ops = _.extend(_ops,ops);\n    _.getImage(_ops.image, img => {\n        // 背景图真实宽高及宽高比；\n        let iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            iratio = iw / ih;\n        // 容器宽高及宽高比；\n        let pw = this.elStatus.width,\n            ph = this.elStatus.height,\n            pratio = pw / ph;\n\n        let left,top,width,height;\n        let minX = 0 , minY = 0;\n        let ratio;\n\n        // 初始化背景图属性；\n        _.addClass(img,'mt-background').data(img,'mt-index','background').data(img,'mt-bg-type', _ops.type);\n\n        if(_ops.type == 'contain'){\n            if(iratio > pratio){\n                left = _ops.left || 0;\n                top = _ops.top || (ph - pw/iratio) / 2;\n                width = pw;\n                height = pw / iratio;\n                ratio = iw / width;\n            }else{\n                left = _ops.left || (pw - ph*iratio) / 2;\n                top = _ops.top || 0;\n                width = ph*iratio;\n                height = ph;\n                ratio = ih / height;\n            }\n        }else if(_ops.type == 'crop'){\n            left = 0;\n            top = 0;\n            if(iratio > pratio){\n                width = ph*iratio;\n                height = ph;\n                minX = (width - pw)/width;\n                ratio = ih / height;\n            }else{\n                width = pw;\n                height = pw/iratio;\n                minY = (height - ph)/height;\n                ratio = iw / width;\n            }\n            _ops.limit = {\n                x:minX,\n                y:minY,\n                maxScale:1,\n                minScale:1,\n            };\n        }\n        img.style = `width:${width}px;height:${height}px;left:${left}px;top:${top}px`;\n        this.el.appendChild(img);\n\n        // 记录背景图参数；\n        _ops.ratio = ratio;\n        _ops.left = left;\n        _ops.top = top;\n\n        this._childs.background = {\n            el:img,\n            ops: _ops,\n        };\n    });\n    return this;\n};\n\nTouchkit.prototype.add = function(ops){\n    let _ops = {\n        image:'',\n        width:'',\n        use:{\n            drag:false,\n            pinch:false,\n            rotate:false,\n            singlePinch:false,\n            singleRotate:false,\n        },\n        limit:false,\n        pos:{\n            x:0,\n            y:0,\n            scale:1,\n            rotate:0,\n        },\n        close:false,\n    };\n\n    if(!_.isArr(ops))ops = [ops];\n\n    ops.forEach(v=>{\n        _.getImage(v.image,img=>{\n            this._add(img,_.extend(_ops,v));\n        });\n    });\n    return this;\n};\n\nTouchkit.prototype._add = function(img,ops){\n    let iw = img.naturalWidth,\n        ih = img.naturalHeight,\n        iratio = iw / ih;\n    let _templateEl = img;\n    let _ele = _.domify(`<div class=\"mt-child\" id=\"mt-child-${this._childIndex}\" data-mt-index=\"${this._childIndex}\"></div>`)[0];\n    let originWidth = this._get('hor',ops.width),\n        originHeight = originWidth / iratio;\n    let spaceX = (ops.pos.scale - 1) * originWidth/2,\n        spaceY = (ops.pos.scale - 1) * originHeight/2;\n    _ele.style = `width:${originWidth}px;height:${originHeight}px`;\n    _.addClass(_templateEl,'mt-image');\n    _ele.appendChild(_templateEl);\n    // 是否添加关闭按钮；\n    if(ops.close || this._ops.close){\n        _ele.appendChild(_.domify(`<div class=\"mt-close-btn\"></div>`)[0]);\n    }\n    this.el.appendChild(_ele);\n    // 记录数据；\n    this._childs[this._childIndex] = {\n        el:_ele,\n        ops: ops,\n    };\n    // 根据id进行zIndex的设置；\n    this._zIndexBox.setIndex(`mt-child-${this._childIndex}`);\n\n    // 没有开启单指操作时，不添加单指按钮；\n    let addButton = ((ops.use.singlePinch || this._ops.use.singlePinch) || (ops.use.singleRotate || this._ops.use.singleRotate)) ? true : false;\n    // 切换operator到新添加的元素上；\n    this.switch(_ele,addButton);\n\n    // space 为因为缩放造成的偏移误差；\n    this._setTransform(_ele,{\n        x:this._get('hor',ops.pos.x) + spaceX,\n        y:this._get('ver',ops.pos.y) + spaceY,\n        scale:ops.pos.scale,\n        rotate:ops.pos.rotate,\n    });\n    this._childIndex++;\n};\n// 使用 mcanvas 合成图片后导出 base64;\nTouchkit.prototype.exportImage = function(cbk){\n    let cwidth = this.elStatus.width,\n        cheight = this.elStatus.height;\n    let bg = this._childs.background;\n    let bgLeft,bgTop;\n    let ratio = bg.ops.ratio;\n    let mc = new MC(cwidth*ratio,cheight*ratio);\n    let addChilds = [];\n    this._zIndexBox.zIndexArr.forEach(v=>{\n        let child = document.querySelector('#'+v);\n        let image = child.querySelector('.mt-image');\n        let childPos = JSON.parse(_.data(child,'mtouch-status'));\n        let width = image.clientWidth || image.offsetWidth;\n        childPos.x *= ratio;\n        childPos.y *= ratio;\n        addChilds.push({\n            image:image,\n            options:{\n                width: width * ratio,\n                pos:childPos,\n            },\n        });\n    });\n    if(bg.ops.type == 'crop'){\n        let bgPos = JSON.parse(_.data(bg.el,'mtouch-status')) || {left:0,top:0,scale:1,rotate:0};\n        bgLeft = -bgPos.x;\n        bgTop = -bgPos.y;\n    }else{\n        bgLeft = bg.ops.left;\n        bgTop = bg.ops.top;\n    }\n    mc.background({\n        image:bg.el,\n        type:bg.ops.type,\n        left:bgLeft * ratio,\n        top:bgTop * ratio,\n    }).add(addChilds).draw(b64=>{\n        cbk(b64);\n    });\n};\n\nTouchkit.prototype._bind = function(){\n    // 绑定所有事件；\n    EVENT.forEach(evName=>{\n        if(!this[evName]){\n            this[evName] = () =>{\n                this._ops.event[evName]();\n            };\n        }\n        this.mt.on(evName,this[evName].bind(this));\n    });\n\n    // 点击子元素外的区域失去焦点；\n    this.el.addEventListener('click',ev=>{\n        if(!this._isAdd(ev.target)){\n            this.switch(null);\n        }\n        // 如果背景为裁剪模式，则切换到操作背景图；\n        if(_.hasClass(ev.target,'mt-background') && _.data(ev.target,'mt-bg-type') == 'crop'){\n            this.switch(ev.target);\n        }\n\n    });\n\n    // 切换子元素；\n    _.delegate(this.el,'click','.mt-child',ev=>{\n        let el = ev.delegateTarget,\n            _ops = this._getOperatorOps(el),\n            _addButton = ((_ops.use.singlePinch || this._ops.use.singlePinch) || (_ops.use.singleRotate || this._ops.use.singleRotate)) ? true : false;\n        this.switch(el,_addButton);\n        this._zIndexBox.toTop(el.id);\n    });\n\n    // 关闭按钮事件；\n    _.delegate(this.el,'click','.mt-close-btn',ev=>{\n        let _el = ev.delegateTarget;\n        let _child = _el.parentNode || _el.parentElement;\n        this._zIndexBox.removeIndex(_child.id);\n        _.remove(_child);\n    });\n};\n\nTouchkit.prototype.touchstart = function(ev){\n    if(!this.freezed){\n        if(this.operator){\n            this.transform = _.getPos(this.operator);\n        }\n        this._ops.event.touchstart(ev);\n    }\n};\n\nTouchkit.prototype.drag = function(ev){\n    if(!this.freezed){\n        if(this.operator){\n            let ops = this._getOperatorOps();\n            if(ops.use.drag || this._ops.use.drag){\n                this.transform.x += ev.delta.deltaX;\n                this.transform.y += ev.delta.deltaY;\n                this._setTransform();\n            }\n        }\n        this._ops.event.drag(ev);\n    }\n};\n\nTouchkit.prototype.pinch = function(ev){\n    if(!this.freezed){\n        if(this.operator){\n            let ops = this._getOperatorOps();\n            if(ops.use.pinch || this._ops.use.pinch){\n                this.transform.scale *= ev.delta.scale;\n                this._setTransform();\n            }\n        }\n        this._ops.event.pinch(ev);\n    }\n};\nTouchkit.prototype.rotate = function(ev){\n    if(!this.freezed){\n        if(this.operator){\n            let ops = this._getOperatorOps();\n            if(ops.use.rotate || this._ops.use.rotate){\n                this.transform.rotate += ev.delta.rotate;\n                this._setTransform();\n            }\n        }\n        this._ops.event.rotate(ev);\n    }\n};\nTouchkit.prototype.singlePinch = function(ev){\n    if(!this.freezed){\n        if(this.operator){\n            let ops = this._getOperatorOps();\n            if(ops.use.singlePinch || this._ops.use.singlePinch){\n                this.transform.scale *= ev.delta.scale;\n                this._setTransform();\n            }\n        }\n        this._ops.event.singlePinch(ev);\n    }\n};\nTouchkit.prototype.singleRotate = function(ev){\n    if(!this.freezed){\n        if(this.operator){\n            let ops = this._getOperatorOps();\n            if(ops.use.singleRotate || this._ops.use.singleRotate){\n                this.transform.rotate += ev.delta.rotate;\n                this._setTransform();\n            }\n        }\n        this._ops.event.singleRotate(ev);\n    }\n};\nTouchkit.prototype._setTransform = function(el = this.operator, transform = this.transform) {\n    let trans = JSON.parse(JSON.stringify(transform));\n    let ops = this._getOperatorOps();\n\n    let defaulLimit = (this._ops.limit && typeof this._ops.limit == 'object') ? _.extend({\n        x:0.5,\n        y:0.5,\n        maxScale:3,\n        minScale:0.4,\n    },this._ops.limit) : {\n        x:0.5,\n        y:0.5,\n        maxScale:3,\n        minScale:0.4,\n    };\n\n    let _limit = (ops.limit && ops.limit !== true) ? _.extend(defaulLimit,ops.limit) : defaulLimit;\n    if(ops.limit || this._ops.limit){\n        trans = this._limitOperator(trans,_limit);\n    }\n    if(ops.use.singlePinch || this._ops.use.singlePinch){\n        let singlePinchBtn = el.querySelector(`.mtouch-singleButton`);\n            singlePinchBtn.style.transform = `scale(${1/trans.scale})`;\n            singlePinchBtn.style.webkitTransform = `scale(${1/trans.scale})`;\n    }\n    if(ops.use.singleRotate || this._ops.use.singleRotate){\n        let singleRotateBtn = el.querySelector(`.mtouch-singleButton`);\n            singleRotateBtn.style.transform = `scale(${1/trans.scale})`;\n            singleRotateBtn.style.webkitTransform = `scale(${1/trans.scale})`;\n    }\n    if(ops.close || this._ops.close){\n        let closeBtn = el.querySelector(`.mt-close-btn`);\n        closeBtn.style.transform = `scale(${1/trans.scale})`;\n        closeBtn.style.webkitTransform = `scale(${1/trans.scale})`;\n    }\n    window.requestAnimFrame(()=>{\n        _.setPos(el, trans);\n    });\n};\nTouchkit.prototype._limitOperator = function(transform,limit) {\n    // 实时获取操作元素的状态；\n    let {minScale, maxScale} = limit;\n    if (minScale && transform.scale < minScale){\n        transform.scale = minScale;\n    }\n    if (maxScale && transform.scale > maxScale){\n        transform.scale = maxScale;\n    }\n    let operatorStatus = _.getOffset(this.operator);\n    // 因缩放产生的间隔；\n    let spaceX = operatorStatus.width * (transform.scale - 1) / 2;\n    let spaceY = operatorStatus.height * (transform.scale - 1) / 2;\n    // 参数设置的边界值；\n    let boundaryX = operatorStatus.width * transform.scale  * (limit.x);\n    let boundaryY = operatorStatus.height * transform.scale * (limit.y);\n    // 4个边界状态；\n    let minX = spaceX - boundaryX;\n    let minY = spaceX - boundaryY;\n    let maxX = this.elStatus.width - operatorStatus.width * transform.scale + spaceX + boundaryX;\n    let maxY = this.elStatus.height - operatorStatus.height * transform.scale + spaceY + boundaryY;\n\n    if(limit.x || limit.x == 0){\n        if(transform.x >= maxX)transform.x = maxX;\n        if(transform.x < minX)transform.x = minX;\n    }\n    if(limit.y || limit.y == 0){\n        if(transform.y > maxY)transform.y = maxY;\n        if(transform.y < minY)transform.y = minY;\n    }\n    return transform;\n};\nTouchkit.prototype.switch = function(el,addButton){\n    if(!this.mt || this.freezed)return;\n    if(el){\n        el = _.getEl(el);\n    }\n    _.forin(this._childs,(k,v)=>{\n        _.removeClass(v.el,'mt-active');\n    });\n    // 转换操作元素后，也需要重置 mtouch 中的单指缩放基本点 singleBasePoint;\n    this.mt.switch(el,addButton);\n    // 切换operator;\n    this.operator = el;\n\n    if(el){\n        _.addClass(el,'mt-active');\n        this._activeChild = el;\n    }\n    return this;\n};\n\nTouchkit.prototype._getOperatorOps = function(target){\n    let _tar = target || this.operator;\n    let index = _.data(_tar,'mt-index');\n    return this._childs[index].ops;\n};\n\n// 冻结手势容器，暂停所有操作，且失去焦点；\n// 解冻后恢复最后状态；\nTouchkit.prototype.freeze = function(boolean){\n    if(boolean){\n        _.forin(this._childs,(k,v)=>{\n            _.removeClass(v.el,'mt-active');\n        });\n    }else{\n        _.addClass(this._activeChild,'mt-active');\n    }\n    this.freezed = boolean ? true:false;\n    return this;\n};\n\n// 重置所有状态到初始化阶段；\nTouchkit.prototype.reset = function(){\n    _.forin(this._childs,(k,v)=>{\n        _.remove(v.el);\n    });\n    this._init();\n};\n\n// 销毁，但保持原有样式，失去焦点与事件绑定；\nTouchkit.prototype.destory = function(){\n    _.forin(this._childs,(k,v)=>{\n        _.removeClass(v.el,'mt-active');\n    });\n    this.mt && this.mt.destroy();\n    this.mt = null;\n};\n// 参数加工函数；\n// 兼容 5 种 value 值：\n// x:250, x:'250px', x:'100%', x:'left:250',x:'center',\n// width:100,width:'100px',width:'100%'\nTouchkit.prototype._get = function(drection,str){\n    let result = str;\n    let k,par,child;\n    if(document.body && document.body.clientWidth){\n        k = drection == 'hor' ? 'clientWidth':'clientHeight';\n    }else{\n        k = drection == 'hor' ? 'offsetWidth' : 'offsetHeight';\n    }\n    par = this.el[k];\n    child = this.operator ? this.operator[k] : 0;\n    if(typeof str === 'string'){\n        if(_.include(str,':')){\n            let arr = str.split(':');\n            switch (arr[0]) {\n                case 'left':\n                case 'top':\n                    result = +(arr[1].replace('px',''));\n                    break;\n                case 'right':\n                case 'bottom':\n                    result = par - (+(arr[1].replace('px',''))) - child;\n                    break;\n                default:\n            }\n        }else if (_.include(str,'px')) {\n            result = (+str.replace('px', ''));\n        } else if (_.include(str,'%')) {\n            result = par * (+str.replace('%', '')) / 100;\n        }else if(str == 'center'){\n            result = (par-child)/2;\n        }else{\n            result = +str;\n        }\n    }\n    return result;\n};\n\nTouchkit.prototype._isAdd = function(el){\n    let target = el;\n    while(target !== this.el || target.tagName.toLowerCase() == 'body'){\n        if(_.include(target.className,'mt-child')){\n            return true;\n        }\n        target = target.parentNode;\n    }\n    return false;\n};\n\nTouchkit.prototype._insertCss = function(){\n    _.addCssRule('.mtouch-singleButton','display: none;');\n    _.addCssRule('.mt-child.mt-active','z-index: 99;outline:2px solid hsla(0,0%,100%,.5);');\n    _.addCssRule('.mt-active .mtouch-singleButton,.mt-active .mt-close-btn','display: inline-block;');\n    _.addCssRule('.mt-child','position:absolute;text-align:left;');\n    _.addCssRule('.mt-image','width:100%;height:100%;position:absolute;text-align:left;');\n    _.addCssRule('.mt-close-btn','position:absolute;width:30px;height:30px;top:-15px;right:-15px;background-size:100%;display:none;');\n    _.addCssRule('.mt-background','position:absolute;left:0;top:0;');\n};\n","export default {\n    getLength(v1) {\n        if (typeof v1 !== 'object') {\n            console.error('getLength error!');\n            return;\n        }\n        return Math.sqrt(v1.x * v1.x + v1.y * v1.y);\n    },\n    getAngle(v1, v2) {\n        if (typeof v1 !== 'object' || typeof v2 !== 'object') {\n            console.error('getAngle error!');\n            return;\n        }\n        // 判断方向，顺时针为 1 ,逆时针为 -1；\n        let direction = v1.x * v2.y - v2.x * v1.y > 0 ? 1: -1,\n            // 两个向量的模；\n            len1 = this.getLength(v1),\n            len2 = this.getLength(v2),\n            mr = len1 * len2,\n            dot,r;\n        if (mr === 0)return 0;\n        // 通过数量积公式可以推导出：\n        // cos = (x1 * x2 + y1 * y2)/(|a| * |b|);\n        dot = v1.x * v2.x + v1.y * v2.y;\n        r = dot / mr;\n        if (r > 1)r = 1;\n        if (r < -1)r = -1;\n        // 解值并结合方向转化为角度值；\n        return Math.acos(r) * direction * 180 / Math.PI;\n    },\n    getBasePoint(el) {\n        if (!el) return {x:0,y:0};\n        let offset = this.getOffset(el);\n        let x = offset.left + el.getBoundingClientRect().width / 2,\n            y = offset.top + el.getBoundingClientRect().width / 2;\n        return {x: Math.round(x), y: Math.round(y)};\n    },\n    extend(obj1, obj2) {\n        for (let k in obj2) {\n            if (obj2.hasOwnProperty(k)) {\n                if(typeof obj2[k] == 'object' && !(obj2[k] instanceof Node)){\n                    if(typeof obj1[k] !== 'object'){\n                        obj1[k] = {};\n                    }\n                    this.extend(obj1[k],obj2[k]);\n                }else{\n                    obj1[k] = obj2[k];\n                }\n            }\n        }\n        return obj1;\n    },\n    getVector(p1, p2) {\n        if (typeof p1 !== 'object' || typeof p2 !== 'object' ) {\n            console.error('getvector error!');\n            return;\n        }\n        let x = Math.round(p1.x - p2.x),\n            y = Math.round(p1.y - p2.y);\n        return { x, y };\n    },\n    getPoint(ev, index) {\n        if (!ev || !ev.touches[index]) {\n            console.error('getPoint error!');\n            return;\n        }\n        return {\n            x: Math.round(ev.touches[index].pageX),\n            y: Math.round(ev.touches[index].pageY),\n        };\n    },\n    getOffset(el){\n        el = typeof el == 'string'? document.querySelector(el): el;\n        let rect = el.getBoundingClientRect();\n        let offset = {\n            left:rect.left + document.body.scrollLeft,\n            top:rect.top + document.body.scrollTop,\n            width:el.offsetWidth,\n            height:el.offsetHeight,\n        };\n        return offset;\n    },\n    matrixTo(matrix){\n        let arr = (matrix.replace('matrix(','').replace(')','')).split(',');\n        let cos = arr[0],\n            sin = arr[1],\n            tan = sin / cos,\n            rotate = Math.atan( tan ) * 180 / Math.PI,\n            scale = cos / ( Math.cos( Math.PI / 180 * rotate )),\n            trans;\n        trans = {\n            x:parseInt(arr[4]),\n            y:parseInt(arr[5]),\n            scale,\n            rotate,\n        };\n        return trans;\n    },\n    getUseName(evName){\n        let useName = evName.replace('start','');\n        let end = useName.indexOf('rotate') !== -1 ? 'nd' : 'end';\n        useName = useName.replace(end,'');\n        return useName;\n    },\n    domify(DOMString) {\n        let htmlDoc = document.implementation.createHTMLDocument();\n        htmlDoc.body.innerHTML = DOMString;\n        return htmlDoc.body.children;\n    },\n    getEl(el){\n        if(!el){\n            console.error('el error,there must be a el!');\n            return;\n        }\n        let _el;\n        if(typeof el == 'string'){\n            _el = document.querySelector(el);\n        }else if(el instanceof Node){\n            _el = el;\n        }else{\n            console.error('el error,there must be a el!');\n            return;\n        }\n        return _el;\n    },\n    data(el,key){\n        el = this.getEl(el);\n        return el.getAttribute(`data-${key}`);\n    },\n    include(str1,str2){\n        if(str1.indexOf){\n            return str1.indexOf(str2) !== -1;\n        }else{\n            return false;\n        }\n    },\n    getPos(el) {\n        if(!el)return;\n        el = this.getEl(el);\n        let defaulTrans;\n        let style = window.getComputedStyle(el,null);\n        let cssTrans = style.transform || style.webkitTransform;\n\n        if(window.getComputedStyle && cssTrans !== 'none'){\n            defaulTrans = this.matrixTo(cssTrans);\n        }else{\n            defaulTrans = {\n                x: 0,\n                y: 0,\n                scale: 1,\n                rotate: 0,\n            };\n        }\n        return JSON.parse(el.getAttribute('data-mtouch-status')) || defaulTrans;\n    },\n};\n","export default class HandlerBus{\n    constructor(el) {\n        this.handlers = [];\n        this.el = el;\n    }\n    add(handler){\n        this.handlers.push(handler);\n        return this;\n    }\n    del(handler){\n        if(!handler){\n            this.handlers = [];\n        }else{\n            this.handlers.forEach((value,index)=>{\n                if(value === handler){\n                    this.handlers.splice(index,1);\n                }\n            });\n        }\n        return this;\n    }\n    fire(){\n        if(!this.handlers || !this.handlers.length === 0)return;\n        this.handlers.forEach(handler=>{\n            if(typeof handler === 'function') handler.apply(this.el, arguments);\n        });\n        return this;\n    }\n}\n","export default {\n    extend(obj1, obj2) {\n        for (let k in obj2) {\n            if (obj2.hasOwnProperty(k)) {\n                if (typeof obj2[k] == 'object') {\n                    if (typeof obj1[k] !== 'object' || obj1[k] === null) {\n                        obj1[k] = {};\n                    }\n                    this.extend(obj1[k], obj2[k]);\n                } else {\n                    obj1[k] = obj2[k];\n                }\n            }\n        }\n        return obj1;\n    },\n    loadImage(image, loaded, error) {\n        let img = new Image();\n        if(image.indexOf('http') == 0){\n            img.crossOrigin = '*';\n        }\n        img.onload = () => {\n            loaded(img);\n        };\n        img.onerror = () => {\n            error('img load error');\n        };\n        img.src = image;\n    },\n    isArr(arr) {\n        return Object.prototype.toString.call(arr) === '[object Array]';\n    },\n    getImage(image,cbk){\n        if(typeof image == 'string'){\n                this.loadImage(image, img => {\n                    cbk(img);\n                },err=>{\n                    console.log(err);\n                });\n        }else if(typeof image == 'object'){\n            cbk(image);\n        }else{\n            console.log('add image error');\n            return;\n        }\n    },\n    forin(obj,cbk){\n        for(let k in obj){\n            if(obj.hasOwnProperty(k)){\n                cbk(k,obj[k]);\n            }\n        }\n    },\n};\n","// 素材层级管理系统；\nimport _ from './utils';\nexport default class ZIndex {\n    constructor(config) {\n        this.config = {\n            'min': 50,\n            'max': 100,\n        };\n        this.config = _.extend(this.config, config);\n        this.topIndex = this.config.min;\n        this.zIndexArr = [];\n    }\n    init(){\n        this.zIndexArr = [];\n        this.topIndex = this.config.min;\n    }\n    setIndex(id) {\n        this.zIndexArr.push(id);\n        if (this.topIndex > this.config.max) {\n            this.resetIndex();\n        } else {\n            let el = document.querySelector(`#${id}`);\n            el.style.zIndex = this.topIndex;\n            this.topIndex++;\n        }\n    }\n    removeIndex(id) {\n        this.zIndexArr.forEach((value, index, arr) => {\n            if (value == id) {\n                arr.splice(index, 1);\n            }\n        });\n    }\n    resetIndex() {\n        this.zIndexArr.forEach((id, index) => {\n            let el = document.querySelector(`#${id}`);\n            el.style.zIndex = this.config.min+index;\n        });\n        this.topIndex = this.zIndexArr.length + this.config.min;\n    }\n    toTop(id) {\n        if (id !== this.zIndexArr[this.zIndexArr.length - 1]) {\n            this.removeIndex(id);\n            this.setIndex(id);\n        }\n    }\n}\n"],"names":["MTouch","el","this","use","operator","_","getEl","draging","pinching","rotating","singlePinching","singleRotating","fingers","startScale","startPoint","secondPoint","pinchStartLength","singlePinchStartLength","vector1","singleBasePoint","_driveBus","_bind","MCanvas","cwidth","cheight","ops","canvas","ctx","queue","end","textData","bgConfig","_init","createStyleSheet","style","document","createElement","type","head","appendChild","sheet","Touchkit","_ops","extend","elStatus","clientWidth","offsetWidth","clientHeight","offsetHeight","mt","MT","_insertCss","v1","error","Math","sqrt","x","y","v2","direction","getLength","len2","mr","len1","dot","r","acos","PI","offset","getOffset","left","getBoundingClientRect","width","top","round","obj1","obj2","k","hasOwnProperty","_typeof","Node","p1","p2","ev","index","touches","pageX","pageY","querySelector","rect","body","scrollLeft","scrollTop","matrix","arr","replace","split","cos","sin","tan","rotate","atan","scale","parseInt","evName","useName","indexOf","DOMString","htmlDoc","implementation","createHTMLDocument","innerHTML","children","_el","key","getAttribute","str1","str2","defaulTrans","window","getComputedStyle","cssTrans","transform","webkitTransform","matrixTo","JSON","parse","HandlerBus","handlers","handler","push","forEach","value","splice","length","apply","_this2","EVENT","ORIGINEVENT","prototype","_this","fn","bind","addEventListener","destroy","removeEventListener","_this3","_start","e","getPoint","getBasePoint","getVector","singlePinch","pinchV1","touchstart","fire","origin","eventType","_move","isSingleButton","data","target","curFingers","curPoint","singlePinchLength","pinchLength","rotateV1","rotateV2","pinchV2","curSecPoint","vector2","pinch","_eventFire","getAngle","singleRotate","drag","touchmove","preventDefault","_end","_eventEnd","touchend","ing","start","_addButton","domify","button","_style","setAttribute","position","switch","addButton","on","include","_on","v","getUseName","add","off","del","image","loaded","img","Image","crossOrigin","onload","onerror","src","Object","toString","call","cbk","loadImage","log","err","obj","height","getContext","background","bg","color","fillStyle","fillRect","getImage","_background","iRatio","naturalWidth","naturalHeight","cRatio","sx","sy","swidth","sheight","dx","dy","dwidth","dheight","drawImage","_next","watermark","pos","margin","options","def","isArr","_add","_handleOps","ratio","cdx","cdy","cdw","cdh","crop","lsx","lsy","lsw","lsh","ldx","ldy","ldw","ldh","lcvs","lctx","lctxScale","spaceX","spaceY","translate","cw","ch","iw","ih","_get","maxLsw","maxLsh","cropx","cropy","cropw","croph","px","py","pr","ps","parseFloat","text","context","fontFamily","size","option","_text","_parse","result","i","test","splitTag","tmp","textArr","line","lineheight","lh","vlh","font","_this4","measureText","fontLength","forin","lineWidth","align","_fillText","textAlign","textBaseline","fillText","par","child","str","draw","b64","_this5","toDataURL","shift","stringify","cls","_cls","trim","className","RegExp","_par","substring","delegateTarget","id","tagName","toLowerCase","parentNode","selector","rules","insertRule","parentElement","removeChild","success","ZIndex","config","topIndex","min","zIndexArr","max","resetIndex","zIndex","removeIndex","setIndex","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","callback","setTimeout","operatorStatus","freezed","_childs","_childIndex","_activeChild","_zIndexBox","iratio","pw","ph","pratio","minX","minY","addClass","limit","_templateEl","_ele","originWidth","originHeight","close","_setTransform","exportImage","bgLeft","bgTop","mc","MC","addChilds","childPos","bgPos","event","_isAdd","hasClass","delegate","_getOperatorOps","toTop","_child","remove","getPos","delta","deltaX","deltaY","trans","defaulLimit","_limit","_limitOperator","singlePinchBtn","singleRotateBtn","closeBtn","setPos","minScale","maxScale","boundaryX","boundaryY","maxX","maxY","removeClass","_tar","freeze","boolean","reset","destory","drection","addCssRule"],"mappings":"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"}